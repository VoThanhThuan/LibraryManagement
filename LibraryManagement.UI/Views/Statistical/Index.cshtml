@using Library.Library.Entities.ViewModels
@model StatisticalVM

<style>
    .report {
        display: none;
    }

    .card-pane {
        display: none;
    }

    .is-choose-card {
        display: block;
        -webkit-animation: fadeInLeft 1s ease;
        animation: fadeInLeft 1s ease;
    }

    .is-choose {
        display: block;
        -webkit-animation: fadeInLeft 1s ease;
        animation: fadeInLeft 1s ease;
    }

    .title-choose-report {
        /*max-width: 980px;
                                margin: 0 auto;*/
        margin-top: 10px;
        padding-bottom: 10px;
        margin-bottom: 10px;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }

        .title-choose-report .plans {
            width: 50%;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            margin-left: -8px;
            margin-right: -8px;
        }

            .title-choose-report .plans .plan {
                position: relative;
                width: calc(50% - 16px);
                max-width: calc(50% - 16px);
                margin: 8px;
            }

                .title-choose-report .plans .plan input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    height: 100%;
                    width: 100%;
                    opacity: 0;
                    cursor: pointer;
                    z-index: 1;
                }

            .title-choose-report .plans .plan-inner {
                width: 100%;
                -webkit-box-flex: 0;
                -ms-flex: 0;
                flex: 0;
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                -webkit-transition: all 0.3s;
                transition: all 0.3s;
                border-radius: 6px;
                border: 1px solid #404045;
                background-color: #313135;
                padding: 20px;
            }

                .title-choose-report .plans .plan-inner img {
                    display: block;
                    height: 32px;
                    width: 32px;
                    min-width: 32px;
                    -webkit-filter: grayscale(1);
                    filter: grayscale(1);
                    opacity: 0.6;
                    pointer-events: none;
                    -webkit-transition: all 0.3s;
                    transition: all 0.3s;
                }

                .title-choose-report .plans .plan-inner .content {
                    margin-left: 12px;
                    line-height: 1.3;
                }

                    .title-choose-report .plans .plan-inner .content span {
                        font-family: "Montserrat", sans-serif;
                        font-size: 1.2rem;
                        font-weight: 600 !important;
                        color: #a2a5b9;
                        text-transform: uppercase;
                        display: block;
                    }

                .title-choose-report .plans .plan-inner .check-mark {
                    margin-left: auto;
                    display: none;
                    -webkit-box-pack: center;
                    -ms-flex-pack: center;
                    justify-content: center;
                    -webkit-box-align: center;
                    -ms-flex-align: center;
                    align-items: center;
                    height: 32px;
                    width: 32px;
                    min-width: 32px;
                    border-radius: 99px;
                    color: #05d69e;
                    border: 1px solid #3f3f43;
                    -webkit-box-sizing: -1px 3px 10px 0 rgba(0, 0, 0, 0.06);
                    box-sizing: -1px 3px 10px 0 rgba(0, 0, 0, 0.06);
                }

                    .title-choose-report .plans .plan-inner .check-mark svg {
                        width: 16px;
                        height: 16px;
                        stroke-width: 3px;
                    }

            .title-choose-report .plans .plan input:checked + .plan-inner {
                border-color: #10cb8a !important;
            }

                .title-choose-report .plans .plan input:checked + .plan-inner img {
                    -webkit-filter: grayscale(0);
                    filter: grayscale(0);
                    opacity: 1;
                }

                .title-choose-report .plans .plan input:checked + .plan-inner .check-mark {
                    display: -webkit-box;
                    display: -ms-flexbox;
                    display: flex;
                }

    .choose-cards-report {
        border-color: #10cb8a !important;
        -webkit-box-shadow: -1px 3px 10px 0 rgba(0, 0, 0, 0.06) !important;
        box-shadow: -1px 3px 10px 0 rgba(0, 0, 0, 0.06) !important;
    }

        .choose-cards-report .choose-icon {
            -webkit-filter: grayscale(0) !important;
            filter: grayscale(0) !important;
            opacity: 1 !important;
            -webkit-transition: all 0.3s !important;
            transition: all 0.3s !important;
        }

        .choose-cards-report .icon-wrap path {
            stroke: #10cb8a !important;
        }

    .report-cards {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin: 0 auto;
    }

        .report-cards .card {
            position: relative;
            width: calc(20% - 16px);
            background: #313135;
            text-align: center;
            padding: 16px;
            margin: 8px;
            border-radius: 8px;
            border: 1px solid #404045;
            -webkit-transition: all 0.3s;
            transition: all 0.3s;
            cursor: pointer;
        }

            .report-cards .card:hover {
                border-color: #10cb8a;
                -webkit-box-shadow: -1px 3px 10px 0 rgba(0, 0, 0, 0.06);
                box-shadow: -1px 3px 10px 0 rgba(0, 0, 0, 0.06);
            }

                .report-cards .card:hover .choose-icon {
                    -webkit-filter: grayscale(0);
                    filter: grayscale(0);
                    opacity: 1;
                    -webkit-transition: all 0.3s;
                    transition: all 0.3s;
                }

                .report-cards .card:hover .icon-wrap path {
                    stroke: #10cb8a;
                }

            .report-cards .card .choose-icon {
                position: absolute;
                top: 6px;
                left: 6px;
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-pack: center;
                -ms-flex-pack: center;
                justify-content: center;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                height: 18px;
                width: 18px;
                border-radius: 999px;
                color: #05d69e;
                opacity: 0;
                pointer-events: none;
                -webkit-transition: all 0.3s;
                transition: all 0.3s;
            }

            .report-cards .card .icon-wrap {
                display: -webkit-box;
                display: -ms-flexbox;
                display: flex;
                -webkit-box-pack: center;
                -ms-flex-pack: center;
                justify-content: center;
                -webkit-box-align: center;
                -ms-flex-align: center;
                align-items: center;
                background: none;
                border: none;
                -webkit-box-shadow: none;
                box-shadow: none;
                height: 52px;
                width: 100%;
            }

                .report-cards .card .icon-wrap svg {
                    height: 40px;
                    width: 40px;
                }

                .report-cards .card .icon-wrap path {
                    stroke: #a9a9b2;
                    stroke-width: 1px;
                }

            .report-cards .card span {
                text-align: center;
                text-transform: uppercase;
                color: #a2a5b9;
                font-family: "Montserrat", sans-serif;
                font-size: 1.2rem;
                letter-spacing: 1px;
                font-weight: 600;
            }

            .report-cards .card h3 {
                font-size: 1.4rem;
                font-weight: 400;
                color: #a2a5b9;
                -webkit-transition: color 0.3s;
                transition: color 0.3s;
                font-family: "Roboto", sans-serif;
            }

    .box-end {
        display: flex;
    }

    .avatar {
        width: 50px;
        min-width: 50px;
        height: 50px;
        -o-object-fit: cover;
        object-fit: cover;
        display: block;
        border-radius: 100%;
    }

    .box-text {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: flex-start !important;
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: center !important;
        margin-left: 12px;
        -webkit-box-flex: 2;
        -ms-flex-positive: 2;
        flex-grow: 2;
        flex-direction: column;
    }
</style>

<div class="page-title text-center">
    <span class="menu-toggle">
        <span class="icon-box-toggle">
            <span>
                <i class="fal fa-horizontal-rule icon-line-top"></i>
                <i class="fal fa-horizontal-rule icon-line-center"></i>
                <i class="fal fa-horizontal-rule icon-line-bottom"></i>
            </span>
        </span>
    </span>
    <div class="title-wrap">
        <h1 class="title">Thống Kê</h1>
    </div>

</div>
<form action="/Statistical" method="get">
    <label for="date-start">Ngày Bắt Đầu</label>
    <input type="date" name="start" id="date-start" value="@ViewData["start"]">
    <label for="date-end">Ngày Kết Thúc</label>
    <input type="date" name="end" id="date-end" value="@ViewData["end"]">
    <button class="btn-export">Lọc</button>
</form>
<div class="company-header is-bg-6">
    <div class="header-time">
        <div class="item-inner">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:briefcase"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path></g></svg>
            <span>@Model.BooksBorrowed.Sum(x => x.StatisticalAmount)</span>
            <p>Sách đã mượn</p>
        </div>
    </div>
    <div class="header-time">
        <div class="item-inner">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:shopping-cart"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></g></svg>
            <span>@Model.BooksBorrowing.Sum(x => x.StatisticalAmount)</span>
            <p>Sách đang được mượn</p>
        </div>
    </div>
    <div class="header-time">
        <div class="item-inner">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:box"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><path d="M3.27 6.96L12 12.01l8.73-5.05"></path><path d="M12 22.08V12"></path></g></svg>
            <span>@Model.BooksReturn.Sum(x => x.StatisticalAmount)</span>
            <p>Sách đã được trả</p>
        </div>
    </div>
    <div class="header-time">
        <div class="item-inner">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:bell"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path></g></svg>
            <span>
                @{
                    var total = Model.BooksBorrowed.Sum(x => x.StatisticalAmount) - (Model.BooksBorrowing.Sum(x => x.StatisticalAmount) + Model.BooksReturn.Sum(x => x.StatisticalAmount));
                    if (total > 0) {
                        <span>@total</span>
                    } else {
                        <span>0</span>
                    }
                }
            </span>
            <p>Sách bị mất</p>
        </div>
    </div>
</div>

<div class="is-12">
    <div class="illustration-header">
        <img class="dark-image" src="/public/header.svg" alt="">
        <div class="header-stats">
            <div class="stats-inner">
                <div class="stat-item">
                    <span class="is-success pulsate" style="--delay: 1s">@Model.TopLibraryCards.Count()</span>
                    <p>Top thẻ mượn</p>
                </div>
                <div class="stat-item">
                    <span class="is-warning pulsate" style="--delay: 3s">@Model.CardsLock.Count()</span>
                    <p>Thẻ Bị Khóa</p>
                </div>
                <div class="stat-item">
                    <span class="is-info pulsate" style="--delay: 5s">@Model.CardReturnLate.Count()</span>
                    <p>Thẻ trả Sách trễ</p>
                </div>

            </div>
        </div>
    </div>
</div>



<div class="title-choose-report">
    <div class="plans">
        <div class="plan choose-report">
            <input type="radio" name="plan_selection" checked>
            <div class="plan-inner">
                <img src="/public/logo.svg" alt="">
                <div class="content">
                    <span>Thống Kê Sách</span>
                </div>
                <div class="check-mark">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:check"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"></path></g></svg>
                </div>
            </div>
        </div>
        <div class="plan choose-report">
            <input type="radio" name="plan_selection">
            <div class="plan-inner">
                <img src="/public/logo2.svg" alt="">
                <div class="content">
                    <span>Thống Kê Thẻ</span>
                </div>
                <div class="check-mark">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--feather" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" data-icon="feather:check"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"></path></g></svg>
                </div>
            </div>
        </div>
    </div>
    <div class="space"></div>
</div>

<div class="report is-choose">
    <h3 class="section-heading" style="margin-top: 20px;">Danh Sách Thống Kê</h3>

    <div class="select-display tabs">
        <div class="column">
            <div class="project-grid-item tab-item active-item" data-item="borrowed" style="border-color: #8f23f7;">
                <img class="project-avatar" src="/public/slicer.svg" alt="">
                <h3>Sách Đã Mượn</h3>
                <p></p>
            </div>
        </div>

        <div class="column">
            <div class="project-grid-item tab-item" data-item="borrowing">
                <img class="project-avatar" src="/public/metamovies.svg" alt="">
                <h3>Sách Đang Mượn</h3>
                <p></p>
            </div>
        </div>
        <div class="column">
            <div class="project-grid-item tab-item" data-item="missing">
                <img class="project-avatar" src="/public/company.svg" alt="">
                <h3>Sách Đã Mất</h3>
                <p></p>
            </div>
        </div>
        <div class="column">
            <div class="project-grid-item tab-item" data-item="returned">
                <img class="project-avatar" src="/public/fastpizza.svg" alt="">
                <h3>Sách Đã Trả</h3>
                <p></p>
            </div>
        </div>
        <div class="column">
            <div class="project-grid-item tab-item" data-item="notenought">
                <img class="project-avatar" src="/public/drop.svg" alt="">
                <h3>Sách Chưa Trả Đủ</h3>
                <p></p>
            </div>
        </div>
    </div>

    <div class="tab-content">
        <div class="tab-pane active-pane">
            <div class="is-12">
                <h3 class="section-heading">Sách đã mượn</h3>

                <div class="timeline-wrapper">
                    <div class="timeline-wrapper-inner">
                        @if (Model.BooksBorrowed.Count() <= 0) {
                            <div style="display: flex; align-items: center; justify-content:center">
                                <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                            </div>
                        } else {
                            @foreach (var item in Model.BooksBorrowed) {

                                <div class="timeline-item" data-v-5c9a314b="">
                                    <div class="date">
                                        <span>@item.TimeBorrowed.ToShortDateString()</span>
                                    </div>
                                    <div class="dot is-info"></div>
                                    <div class="content-wrap">
                                        <div class="content-box">
                                            <div class="status"></div>
                                            <div class="v-avatar">
                                                <img class="thumbnails" src="@item.Thumbnail" alt="">
                                            </div>
                                            <div class="box-text">
                                                <div class="meta-text">
                                                    <p>
                                                        <span>@item.Name | Số Lượng: @item.StatisticalAmount</span>@*<span style="color: #00ff90">&nbsp;Tác giả: @item.Author</span>*@
                                                    </p>
                                                    <span>@item.TimeBorrowed.ToShortTimeString().ToLower()</span>
                                                </div>
                                            </div>
                                            <div class="box-end">
                                                @if (@item.BookInBorrow.AmountReturn + @item.BookInBorrow.AmountMissing < @item.BookInBorrow.AmountBorrowed) {
                                                    <a class="box-end" href="/Borrows/ReturnBook?idCard=@item.LibraryCard.Id">
                                                        <div class="v-avatar is-small">
                                                            <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                        </div>
                                                        <div class="box-text">
                                                            <p>
                                                                <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                            </p>
                                                            <span style="color: #10cb8a">(Ấn để trả sách)</span>

                                                        </div>
                                                    </a>

                                                } else {
                                                    <div class="v-avatar is-small">
                                                        <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                    </div>
                                                    <div class="box-text">
                                                        <p>
                                                            <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                        </p>
                                                    </div>
                                                }
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }
                    </div>
                </div>

            </div>
        </div>
        <div class="tab-pane">
            <div class="is-12">
                <h3 class="section-heading">Sách đang mượn</h3>

                <div class="timeline-wrapper">
                    <div class="timeline-wrapper-inner">
                        @if (Model.BooksBorrowing.Count() <= 0) {
                            <div style="display: flex; align-items: center; justify-content:center">
                                <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                            </div>
                        } else {
                            @foreach (var item in Model.BooksBorrowing) {

                                <div class="timeline-item" data-v-5c9a314b="">
                                    <div class="date">
                                        <span>@item.TimeBorrowed.ToShortDateString()</span>
                                    </div>
                                    <div class="dot is-info"></div>
                                    <div class="content-wrap">
                                        <div class="content-box">
                                            <div class="status"></div>
                                            <div class="v-avatar">
                                                <img class="thumbnails" src="@item.Thumbnail" alt="">
                                            </div>
                                            <div class="box-text">
                                                <div class="meta-text">
                                                    <p>
                                                        <span>@item.Name | Số Lượng: @item.StatisticalAmount</span>@*<span style="color: #00ff90">&nbsp;Tác giả: @item.Author</span>*@
                                                    </p>
                                                    <span>@item.TimeBorrowed.ToShortTimeString().ToLower()</span>
                                                </div>
                                            </div>
                                            <div class="box-end">
                                                <a class="box-end" href="/Borrows/ReturnBook?idCard=@item.LibraryCard.Id">
                                                    <div class="v-avatar is-small">
                                                        <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                    </div>
                                                    <div class="box-text">
                                                        <p>
                                                            <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                        </p>
                                                        <span>(Ấn để trả sách)</span>

                                                    </div>
                                                </a>

                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }

                    </div>
                </div>

            </div>
        </div>
        <div class="tab-pane">
            <div class="is-12">
                <h3 class="section-heading">Sách đã mất</h3>

                <div class="timeline-wrapper">
                    <div class="timeline-wrapper-inner">
                        @if (!Model.BooksMissing.Any()) {
                            <div style="display: flex; align-items: center; justify-content:center">
                                <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                            </div>
                        } else {
                            @foreach (var item in Model.BooksMissing) {

                                <div class="timeline-item" data-v-5c9a314b="">
                                    <div class="date">
                                        @{
                                            var dateMissing = item.TimeMissing == null ? "" : ((DateTime)item.TimeMissing).ToShortDateString();
                                        }
                                        <span>@dateMissing</span>
                                    </div>
                                    <div class="dot is-info"></div>
                                    <div class="content-wrap">
                                        <div class="content-box">
                                            <div class="status"></div>
                                            <div class="v-avatar">
                                                <img class="thumbnails" src="@item.Thumbnail" alt="">
                                            </div>
                                            <div class="box-text">
                                                <div class="meta-text">
                                                    <p>
                                                        <span>@item.Name | Số Lượng: @item.StatisticalAmount</span>@*<span style="color: #00ff90">&nbsp;Tác giả: @item.Author</span>*@
                                                    </p>
                                                    @{
                                                        var timeMissing = item.TimeMissing == null ? "" : ((DateTime)item.TimeMissing).ToShortTimeString();
                                                    }
                                                    <span>@timeMissing</span>
                                                </div>
                                            </div>
                                            <div class="box-end">
                                                <a class="box-end" href="/Borrows/ReturnBook?idCard=@item.LibraryCard.Id">
                                                    <div class="v-avatar is-small">
                                                        <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                    </div>
                                                    <div class="box-text">
                                                        <p>
                                                            <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                        </p>
                                                        <span>(Ấn để trả sách)</span>

                                                    </div>
                                                </a>


                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }

                    </div>
                </div>

            </div>
        </div>
        <div class="tab-pane">
            <div class="is-12">
                <h3 class="section-heading">Sách Đã Trả</h3>

                <div class="timeline-wrapper">
                    <div class="timeline-wrapper-inner">
                        @if (Model.BooksReturn.Count() <= 0) {
                            <div style="display: flex; align-items: center; justify-content:center">
                                <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                            </div>
                        } else {
                            @foreach (var item in Model.BooksReturn) {

                                <div class="timeline-item" data-v-5c9a314b="">
                                    <div class="date">
                                        <span>@item.TimeReturn.ToShortDateString()</span>
                                    </div>
                                    <div class="dot is-info"></div>
                                    <div class="content-wrap">
                                        <div class="content-box">
                                            <div class="status"></div>
                                            <div class="v-avatar">
                                                <img class="thumbnails" src="@item.Thumbnail" alt="">
                                            </div>
                                            <div class="box-text">
                                                <div class="meta-text">
                                                    <p>
                                                        <span>@item.Name | Đã trả: @item.StatisticalAmount / @item.BookInBorrow.AmountBorrowed | Mất: @item.BookInBorrow.AmountMissing</span>@*<span style="color: #00ff90">&nbsp;Tác giả: @item.Author</span>*@
                                                    </p>
                                                    <span>@item.TimeReturn.ToShortTimeString().ToLower()</span>
                                                </div>
                                            </div>
                                            <div class="box-end">
                                                @if (@item.BookInBorrow.AmountReturn + @item.BookInBorrow.AmountMissing < @item.BookInBorrow.AmountBorrowed) {
                                                    <a class="box-end" href="/Borrows/ReturnBook?idCard=@item.LibraryCard.Id">
                                                        <div class="v-avatar is-small">
                                                            <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                        </div>
                                                        <div class="box-text">
                                                            <p>
                                                                <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                            </p>
                                                            <span style="color: #10cb8a">(Ấn để trả sách)</span>

                                                        </div>
                                                    </a>

                                                } else {
                                                    <div class="v-avatar is-small">
                                                        <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                    </div>
                                                    <div class="box-text">
                                                        <p>
                                                            <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                        </p>
                                                    </div>
                                                }

                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }
                    </div>
                </div>

            </div>
        </div>
        <div class="tab-pane">
            <div class="is-12">
                <h3 class="section-heading">Sách Chưa Trả Đủ</h3>

                <div class="timeline-wrapper">
                    <div class="timeline-wrapper-inner">
                        @if (Model.ReturnNotEnoughBooks.Count() <= 0) {
                            <div style="display: flex; align-items: center; justify-content:center">
                                <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                            </div>
                        } else {
                            @foreach (var item in Model.ReturnNotEnoughBooks) {

                                <div class="timeline-item" data-v-5c9a314b="">
                                    <div class="date">
                                        <span>@item.TimeReturn.ToShortDateString()</span>
                                    </div>
                                    <div class="dot is-info"></div>
                                    <div class="content-wrap">
                                        <div class="content-box">
                                            <div class="status"></div>
                                            <div class="v-avatar">
                                                <img class="thumbnails" src="@item.Thumbnail" alt="">
                                            </div>
                                            <div class="box-text">
                                                <div class="meta-text">
                                                    <p>
                                                        <span>@item.Name | Cần trả: @item.StatisticalAmount | Đã trả: @item.BookInBorrow.AmountReturn / @item.BookInBorrow.AmountBorrowed</span>
                                                    </p>
                                                    <span>@item.TimeReturn.ToShortTimeString().ToLower()</span>
                                                </div>
                                            </div>
                                            <div class="box-end">
                                                @if (@item.BookInBorrow.AmountReturn + @item.BookInBorrow.AmountMissing < @item.BookInBorrow.AmountBorrowed) {
                                                    <a class="box-end" href="/Borrows/ReturnBook?idCard=@item.LibraryCard.Id">
                                                        <div class="v-avatar is-small">
                                                            <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                        </div>
                                                        <div class="box-text">
                                                            <p>
                                                                <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                            </p>
                                                            <span style="color: #10cb8a">(Ấn để trả sách)</span>

                                                        </div>
                                                    </a>

                                                } else {
                                                    <div class="v-avatar is-small">
                                                        <img class="avatar" src="@item.LibraryCard.Image" alt="@item.LibraryCard.Name">
                                                    </div>
                                                    <div class="box-text">
                                                        <p>
                                                            <span>@item.LibraryCard.Name - @item.LibraryCard.MSSV</span>
                                                        </p>


                                                    </div>

                                                }

                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }
                    </div>
                </div>

            </div>
        </div>


    </div>

</div>

<div class="report">
    <h3 class="section-heading" style="margin-top: 20px;">Danh Sách Thống Kê</h3>

    <div class="report-cards" style="justify-content: center;">
        <div class="card choose-cards-report">
            <div class="choose-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"><path stroke="#10cb8a" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="1.5" d="M6 12V9.33c0-3.31 2.35-4.67 5.22-3.01l2.31 1.34L15.84 9c2.87 1.66 2.87 4.37 0 6.03l-2.31 1.34-2.31 1.34C8.35 19.34 6 17.99 6 14.67V12z"></path></svg>
            </div>
            <div class="icon-wrap">
                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"><path d="M2 8.5h11.5M6 16.5h2M10.5 16.5h4" stroke="#FF8A65" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path><path d="M22 11.03v5.08c0 3.51-.89 4.39-4.44 4.39H6.44C2.89 20.5 2 19.62 2 16.11V7.89c0-3.51.89-4.39 4.44-4.39h7.06" stroke="#FF8A65" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M16.5 6 18 7.5l4-4" stroke="#FF8A65" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </div>
            <span></span>
            <h3>Top Thẻ Mượn</h3>
        </div>
        <div class="card">
            <div class="choose-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"><path stroke="#10cb8a" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="1.5" d="M6 12V9.33c0-3.31 2.35-4.67 5.22-3.01l2.31 1.34L15.84 9c2.87 1.66 2.87 4.37 0 6.03l-2.31 1.34-2.31 1.34C8.35 19.34 6 17.99 6 14.67V12z"></path></svg>
            </div>
            <div class="icon-wrap">
                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"><path d="M2 8.5h11.5M6 16.5h2M10.5 16.5h4" stroke="#FF8A65" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path><path d="M22 12.03v4.08c0 3.51-.89 4.39-4.44 4.39H6.44C2.89 20.5 2 19.62 2 16.11V7.89c0-3.51.89-4.39 4.44-4.39h7.06" stroke="#FF8A65" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="m17.309 8.19 3.88-3.88M21.189 8.19l-3.88-3.88" stroke="#FF8A65" stroke-width="1.5" stroke-linecap="round"></path></svg>
            </div>
            <span></span>
            <h3>Thẻ Bị Khóa</h3>
        </div>
        <div class="card">
            <div class="choose-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"><path stroke="#10cb8a" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="1.5" d="M6 12V9.33c0-3.31 2.35-4.67 5.22-3.01l2.31 1.34L15.84 9c2.87 1.66 2.87 4.37 0 6.03l-2.31 1.34-2.31 1.34C8.35 19.34 6 17.99 6 14.67V12z"></path></svg>
            </div>
            <div class="icon-wrap">
                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"><path d="M2 8.5h12.5M6 16.5h2M10.5 16.5h4" stroke="#FF8A65" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path><path d="M22 14.03v2.08c0 3.51-.89 4.39-4.44 4.39H6.44C2.89 20.5 2 19.62 2 16.11V7.89c0-3.51.89-4.39 4.44-4.39h8.06M20 3.5v6l2-2M20 9.5l-2-2" stroke="#FF8A65" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </div>
            <span></span>
            <h3>Thẻ Trả Sách Trễ</h3>
        </div>

    </div>

    <div class="report-cards-pane" style="margin-top: 10px;">
        <div class="card-pane is-choose-card">
            <div class="card-grid">
                <div class="columns is-multiline">
                    @if (Model.TopLibraryCards.Count() <= 0) {
                        <div style="display: flex; align-items: center; justify-content:center ;max-width: 94rem; margin: 0 auto;" ">
                        <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                        </div>
                    } else {
                        @foreach (var item in Model.TopLibraryCards) {
                            <div class="column is-6">
                                <div class="card-item">

                                    <div class="card-item-body">
                                        <div class="card-item-body-left">
                                            <div class="c-avatar is-big">
                                                <img class="avatar" src="@item.Image" alt="">
                                            </div>
                                            <div class="meta">
                                                <span>MSSV: @item.MSSV</span>
                                                <span>LỚP: @item.Class</span>
                                            </div>
                                        </div>
                                        <div class="card-item-body-right">
                                            <div class="social-actions">
                                                <a class="social-action" href='@($"/LibraryCards/Edit/{item.Id}")'>
                                                    <i class="fas fa-wrench"></i>
                                                </a>
                                                @*                                               <a class="social-action">
                                                    <i class="fal fa-trash-alt"></i>
                                                    </a>*@
                                                <a class="social-action" href='@($"/LibraryCards/Details/{item.Id}")'>
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <a class="social-action">
                                                    <i class="fas fa-check"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-item-footer">
                                        <div class="left">
                                            <div class="exp">
                                                <span>EXP</span>
                                                <span>@item.Exp</span>
                                            </div>
                                            <div class="progress-bar">
                                                <progress class="progress is-tiny is-blocked" max="116" value="@item.Exp"></progress>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>

        <div class="card-pane">
            <div class="card-grid">
                <div class="columns is-multiline">
                    @if (Model.CardsLock.Count() <= 0) {
                        <div style="display: flex; align-items: center; justify-content:center ;max-width: 94rem; margin: 0 auto;" ">
                        <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                        </div>
                    } else {
                        @foreach (var item in Model.CardsLock) {
                            <div class="column is-6">
                                <div class="card-item">

                                    <div class="card-item-body">
                                        <div class="card-item-body-left">
                                            <div class="c-avatar is-big">
                                                <img class="avatar" src="@item.Image" alt="">
                                            </div>
                                            <div class="meta">
                                                <span>MSSV: @item.MSSV</span>
                                                <span>LỚP: @item.Class</span>
                                            </div>
                                        </div>
                                        <div class="card-item-body-right">
                                            <div class="social-actions">
                                                <a class="social-action">
                                                    <i class="fas fa-wrench"></i>
                                                </a>
                                                @*                                                <a class="social-action">
                                                    <i class="fal fa-trash-alt"></i>
                                                    </a>*@
                                                <a class="social-action">
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <a class="social-action is-blocked">
                                                    <i class="fas fa-times"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-item-footer">
                                        <div class="left">
                                            <div class="exp">
                                                <span>EXP</span>
                                                <span>@item.Exp</span>
                                            </div>
                                            <div class="progress-bar">
                                                <progress class="progress is-tiny is-blocked" max="116" value="@item.Exp"></progress>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>

        <div class="card-pane">
            <div class="card-grid">
                <div class="columns is-multiline">
                    @if (Model.CardReturnLate.Count() <= 0) {
                        <div style="display: flex; align-items: center; justify-content:center ;max-width: 94rem; margin: 0 auto;" ">
                        <img style="width: 500px; height: 500px;" src="/public/search-7-dark.21d246ce.svg">
                        </div>
                    } else {
                        @foreach (var item in Model.CardReturnLate) {
                            <div class="column is-6">
                                <div class="card-item">

                                    <div class="card-item-body">
                                        <div class="card-item-body-left">
                                            <div class="c-avatar is-big">
                                                <img class="avatar" src="@item.Image" alt="">
                                            </div>
                                            <div class="meta">
                                                <span>MSSV: @item.MSSV</span>
                                                <span>LỚP: @item.Class</span>
                                            </div>
                                        </div>
                                        <div class="card-item-body-right">
                                            <div class="social-actions">
                                                <a class="social-action">
                                                    <i class="fas fa-wrench"></i>
                                                </a>
                                                <a class="social-action">
                                                    <i class="fal fa-trash-alt"></i>
                                                </a>
                                                <a class="social-action">
                                                    <i class="fas fa-info-circle"></i>
                                                </a>
                                                <a class="social-action">
                                                    <i class="fas fa-check"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-item-footer">
                                        <div class="left">
                                            <div class="exp">
                                                <span>EXP</span>
                                                <span>@item.Exp</span>
                                            </div>
                                            <div class="progress-bar">
                                                <progress class="progress is-tiny is-blocked" max="116" value="@item.Exp"></progress>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //Get api data

    const url = window.location.origin;

    function searchbook(content) {
        fetch(`${url}/api/Statistical`)
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                console.log(data)

            });
    }

    searchbook("!all");
    //use fetch api to get data from server https://localhost:5001/Books/SearchApi/content, delay 1s for each text append
    console.log(url);

</script>

<script>

    const dots = document.querySelectorAll(".dot")
    const colors = [
        '#e62864',
        '#05d69e',
        '#00BCD4',
        '#ff5652',
        '#ffc107',
    ]

    let colorIndex = 0;
    const changeColor = () => {
        if (colorIndex === colors.length) {
            colorIndex = 0;
        }
        return colors[colorIndex++];
    }
    dots.forEach(e => {
        e.style.borderColor = changeColor()
    });

    /////////////////////// Choose REPORT BOOKS OR REPORT CARDS///////////////
    const chooseReport = document.querySelectorAll('.choose-report')
    const tabReports = document.querySelectorAll('.report')
    chooseReport.forEach((tab, index) => {
        tab.onclick = function () {
            $(".report.is-choose").classList.remove("is-choose")
            tabReports[index].classList.add("is-choose")
        }
    })

    ///CHOOSE CARDS REPORT
    const cards = document.querySelectorAll(".card")
    const cardPanes = document.querySelectorAll(".card-pane")
    cards.forEach((tab, index) => {
        tab.onclick = function () {
            $(".card.choose-cards-report").classList.remove("choose-cards-report")
            $(".card-pane.is-choose-card").classList.remove("is-choose-card")

            this.classList.add("choose-cards-report")
            cardPanes[index].classList.add("is-choose-card")
        }
    })

    /// CHOOSE BOOKS REPORT
    const tabs = document.querySelectorAll(".tab-item");
    const panes = document.querySelectorAll(".tab-pane");

    const colorBorders = [
        '#8f23f7',
        '#fcaa32',
        '#f42557',
        '#4067d3',
        '#fc309b',
    ]

    tabs.forEach((tab, index) => {

        tab.onclick = function () {
            $(".tab-item.active-item").classList.remove("active-item");
            $(".tab-pane.active-pane").classList.remove("active-pane");

            this.classList.add("active-item");
            panes[index].classList.add("active-pane");

            tabs.forEach((e) => {
                e.style.borderColor = `#404045`;
            })
            tab.style.borderColor = colorBorders[index];

        };

    })

</script>
